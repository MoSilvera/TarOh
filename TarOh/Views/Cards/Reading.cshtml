@model IEnumerable<TarOh.Models.ViewModels.Reading>
@{
    ViewData["Title"] = "Reading";

}

<div class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">
                    @foreach (var item in Model)
                    {
                        @for (int i = 3; i < 4; i++)
                        {

                            @item.Cards[i].CardType.Name;


                        }
                    }
                </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="innerbody">
                    @foreach (var item in Model)
                    {
                        @for (int i = 3; i < 4; i++)
                        {
                            <div class="innerbody-left">
                                <img data-toggle="modal" data-target="#one" class=" card-modal-face" src="/img/@item.Cards[i].ImagePath" />

                            </div>
                            <div class="innerbody-right">
                                <p>
                                    @if (item.Cards[i].CardDirection == true)
                                    {
                                        <span>Meaning: @item.Cards[i].UpDefinition</span>
                                    }
                                    else
                                    {
                                        <span>Inverse Meaning: @item.Cards[i].DownDefinition</span>
                                    }
                                </p>
                                <p>
                                    @foreach (var cardcomment in item.CardComments)
                                    {
                                        if (cardcomment.CardId == item.Cards[i].CardId)
                                        {
                                            <div>@cardcomment.Comment</div>
                                        }
                                    }
                                </p>
                                <p>
                                    Ordinal Position 3: @foreach (var op in item.OrdinalPositions)
                                    {
                                        if (op.OrdinalPositionId == 4)
                                        {
                                            <span>@op.Definition</span>
                                        }
                                    }
                                </p>
                                <p>
                                    @foreach (var oc in item.OrdinalComments)
                                    {
                                        <div>@oc.Comment</div>

                                    }
                                </p>
                            </div>



                        }
                    }
                </div>
            </div>
        </div>
</div>
    </div>





<div class="titleDiv">

    <div class="titleInner"><h1>Reading</h1></div>
    <div class="titleInner"><a type="button" target="_blank" asp-area="" asp-controller="SpreadComments" asp-action="GetUserSpreadComments" asp-route-id="@Model.FirstOrDefault().SpreadId" class="btn btn-secondary spreadCommentLink">Spread Comments</a></div>


</div>
<div class="reading-container">

    <div class="left-reading-container">
        <div class="top-left-container">
            @foreach (var item in Model)
            {
                @for (int i = 3; i < 4; i++)
                {
                    if (item.Cards[i].CardDirection == true)
                    {
                        <img data-toggle="modal" data-target=".bd-example-modal-lg" class=" card-face" src="/img/@item.Cards[i].ImagePath" />
                    }
                    else
                    {
                        <img data-toggle="modal" data-target=".bd-example-modal-lg" class=" card-face invert" src="/img/@item.Cards[i].ImagePath" />
                    }

                }
            }
        </div>

        <div class="middle-left-container">
            <div class="middle-middle-left">
                @foreach (var item in Model)
                {
                    @for (int i = 6; i < 7; i++)
                    {
                        if (item.Cards[i].CardDirection == true)
                        {
                            <img class=" card-face" src="/img/@item.Cards[i].ImagePath" />
                        }
                        else
                        {
                            <img class=" card-face invert" src="/img/@item.Cards[i].ImagePath" />
                        }
                    }
                }
            </div>
            <div class="middle-middle-middle">
                @foreach (var item in Model)
                {
                    @for (int i = 0; i < 3; i++)
                    {
                        if (i == 1 && item.Cards[i].CardDirection == false)
                        {
                            <img id="card-@i" class=" card-face invert" src="/img/@item.Cards[i].ImagePath" />
                        }
                        else
                        {
                            <img id="card-@i" class=" card-face" src="/img/@item.Cards[i].ImagePath" />
                        }
                    }
                }
            </div>
            <div class="middle-middle-right">
                @foreach (var item in Model)
                {
                    @for (int i = 5; i < 6; i++)
                    {
                        if (item.Cards[i].CardDirection == true)
                        {
                            <img class=" card-face" src="/img/@item.Cards[i].ImagePath" />
                        }
                        else
                        {
                            <img class=" card-face invert" src="/img/@item.Cards[i].ImagePath" />
                        }
                    }
                }
            </div>
        </div>
        <div class="bottom-left-container">
            @foreach (var item in Model)
            {
                @for (int i = 4; i < 5; i++)
                {
                    if (item.Cards[i].CardDirection == true)
                    {
                        <img class=" card-face" src="/img/@item.Cards[i].ImagePath" />
                    }
                    else
                    {
                        <img class=" card-face invert" src="/img/@item.Cards[i].ImagePath" />
                    }
                }
            }
        </div>
    </div>
    <div class="right-reading-container">
        @foreach (var item in Model)
        {
            @for (int i = 7; i < 11; i++)
            {
                if (item.Cards[i].CardDirection == true)
                {
                    <img class=" card-face card-column-right" src="/img/@item.Cards[i].ImagePath" />
                }
                else
                {
                    <img class=" card-face invert card-column-right" src="/img/@item.Cards[i].ImagePath" />
                }
            }}
    </div>



    @*@foreach (var item in Model)
        {


                @for (int i = 0; i < item.Cards.Count; i++)
                {


                        if (item.Cards[i].CardDirection == true)
                        {
                            <span class="card">
                                <span class="card-@i">
                                     <img class=" card-face" src="/img/@item.Cards[i].ImagePath" />
                                    Card: @Html.DisplayFor(modelItem => item.Cards[i].CardType.Name) ||
                                    Definition: @Html.DisplayFor(modelItem => item.Cards[i].UpDefinition) ||

                                    <a target="_blank" asp-area="" asp-controller="CardComments" asp-action="GetUserCardComments" asp-route-id="@item.Cards[i].CardId">My Comments</a>
                                    @i
                                </span>




                            </span>

                        }
                        else
                        {

                            <span class="card">
                                <span class="card-@i">
                                    <img class=" card-face" src="/img/@item.Cards[i].ImagePath" />
                                    Card: @Html.DisplayFor(modelItem => item.Cards[i].CardType.Name) ||
                                    Definition: @Html.DisplayFor(modelItem => item.Cards[i].DownDefinition) ||

                                    <a target="_blank" asp-area="" asp-controller="CardComments" asp-action="GetUserCardComments" asp-route-id="@item.Cards[i].CardId">My Comments</a>
                                    @i
                                </span>



                            </span>



                        }

                    }





                foreach (var ordinalPosition in item.OrdinalPositions)
                {
                <div>.....ORDINAL POSITION.....</div>
                <p>
                    Position: @Html.DisplayFor(modelItem => ordinalPosition.Name) ||
                    Definition: @Html.DisplayFor(modelItem => ordinalPosition.Definition)
                    <a target="_blank" asp-area="" asp-controller="OrdinalComments" asp-action="GetUserOrdinalComments" asp-route-id="@ordinalPosition.OrdinalPositionId">My Comments</a>

                </p>

            }
        }*@

</div>
